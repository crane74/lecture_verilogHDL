$date
	Tue Oct 11 02:29:57 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var wire 16 ! accum [15:0] $end
$var reg 16 " b [15:0] $end
$var reg 1 # clk $end
$var reg 1 $ rst_n $end
$var reg 3 % s [2:0] $end
$scope module dpath0 $end
$var wire 1 # clk $end
$var wire 3 & com [2:0] $end
$var wire 16 ' datain [15:0] $end
$var wire 1 $ rst_n $end
$var wire 16 ( alu_y [15:0] $end
$var wire 1 ) accout $end
$var reg 16 * accum [15:0] $end
$scope module alu_1 $end
$var wire 16 + a [15:0] $end
$var wire 16 , b [15:0] $end
$var wire 3 - s [2:0] $end
$var wire 16 . y [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
bx -
bx ,
b0 +
b0 *
0)
bx (
bx '
bx &
bx %
0$
0#
bx "
b0 !
$end
#10000
b10001000100010 (
b10001000100010 .
b10001000100010 "
b10001000100010 '
b10001000100010 ,
b1 %
b1 &
b1 -
1$
#20000
b10001000100010 !
b10001000100010 *
b10001000100010 +
1#
#30000
b101010101010101 (
b101010101010101 .
b11001100110011 "
b11001100110011 '
b11001100110011 ,
b110 %
b110 &
b110 -
0#
#40000
b1000100010001000 (
b1000100010001000 .
1)
b101010101010101 !
b101010101010101 *
b101010101010101 +
1#
#50000
b100010001000100 (
b100010001000100 .
b1000100010001 "
b1000100010001 '
b1000100010001 ,
b111 %
b111 &
b111 -
0#
#60000
b11001100110011 (
b11001100110011 .
0)
b100010001000100 !
b100010001000100 *
b100010001000100 +
1#
#70000
b1000100010001000 (
b1000100010001000 .
b100010001000100 "
b100010001000100 '
b100010001000100 ,
b110 %
b110 &
b110 -
0#
#80000
b1100110011001100 (
b1100110011001100 .
b1000100010001000 !
b1000100010001000 *
b1000100010001000 +
1#
#90000
0#
